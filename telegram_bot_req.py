import telebot
import os
import django
import sys
from datetime import datetime

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'dashboard.settings')
django.setup()

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—å –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
from app.models import TelegramMSGS

TELEGRAM_TOKEN = os.getenv("TELEGRAM_REQ_TOKEN")
TARGET_GROUP_ID = int(os.getenv("TARGET_GROUP_ID"))
FINISHED_GROUP_ID = int(os.getenv("FINISHED_GROUP_ID"))

bot = telebot.TeleBot(TELEGRAM_TOKEN)

@bot.message_handler(func=lambda message: message.chat.id == TARGET_GROUP_ID)
def handle_group_messages(message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Ü—ñ–ª—å–æ–≤–æ—ó –≥—Ä—É–ø–∏"""
    try:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        TelegramMSGS.objects.create(text=message.text)
        print(f"–ó–±–µ—Ä–µ–∂–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message.text[:50]}...")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")


@bot.message_handler(func=lambda message: message.chat.id == FINISHED_GROUP_ID)
def check_group_messages(message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Ü—ñ–ª—å–æ–≤–æ—ó –≥—Ä—É–ø–∏"""
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        search_text = message.text
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        saved_messages = TelegramMSGS.objects.all()
        
        deleted_count = 0
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        for saved_msg in saved_messages:
            if search_text in saved_msg.text:
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
                msg_preview = saved_msg.text[:50] + "..." if len(saved_msg.text) > 50 else saved_msg.text
                # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                saved_msg.delete()
                deleted_count += 1
                print(f"–í–∏–¥–∞–ª–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {msg_preview}")
        
        if deleted_count > 0:
            print(f"–í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —â–æ –º—ñ—Å—Ç—è—Ç—å –≤–∫–∞–∑–∞–Ω–∏–π —Ç–µ–∫—Å—Ç.")
        else:
            print("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –≤–∫–∞–∑–∞–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º.")
            
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        bot.reply_to(message, f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")


@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(
        message.chat.id,
        "–í—ñ—Ç–∞—é! üëã\n–Ø –±–æ—Ç –¥–ª—è –∑–≤—ñ—Ç—ñ–≤ –ø—Ä–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n"
    )


bot.polling(none_stop=True)
